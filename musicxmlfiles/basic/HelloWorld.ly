\version "2.25.0"

% Generated by xml2ly v0.9.71 (April 3, 2024)
% on Monday 2024-04-15 @ 19:39:08 CEST
% from "HelloWorld.xml"

% The conversion date was: Monday 2024-04-15 @ 19:39:08 CEST

% The conversion command as supplied was: 
%  xml2ly -auto-output-file-name -lilypond-run-date -lilypond-generation-infos HelloWorld.xml -dlpsr -tmeas -dmsr1skel -dmsr1 -dmsr2
% or, with long option names:
%  xml2ly -auto-output-file-name -lilypond-run-date -lilypond-generation-infos HelloWorld.xml -display-lpsr -trace-measures -display-msr1-skeleton -display-msr1 -display-msr2
% or, with short option names:
%      HelloWorld.xml     


% Scheme function(s): "date & time"
% A set of functions to obtain the LilyPond file creation or modification time.

#(define commandLine             (object->string (command-line)))
#(define loc                     (+ (string-rindex commandLine #\space ) 2))
#(define commandLineLength       (- (string-length commandLine) 2))
#(define lilypondFileName        (substring commandLine loc commandLineLength))
#(define lilypondFileNameSize    (object->string (stat:size (stat lilypondFileName))))
#(define lilypondVersion         (object->string (lilypond-version)))
#(define currentDate             (strftime "%d/%m/%Y" (localtime (current-time))))
#(define currentTime             (strftime "%H:%M:%S" (localtime (current-time))))
#(define lilypondFileNameModTime (stat:mtime (stat lilypondFileName)))

#(define modTimeAsString (strftime "%d/%m/%Y, %H:%M:%S" (localtime lilypondFileNameModTime)))

#(use-modules (srfi srfi-19))
% https://www.gnu.org/software/guile/manual/html_node/SRFI_002d19-Date-to-string.html
#(define pdfCreationTime (date->string (current-date) "~A, ~B ~e ~Y ~H:~M:~S"))


\header {
  workCreditTypeTitle = "Hello World!"
  title               = "Hello World!"
}

\paper {
  % horizontal-shift = 0.0\mm
  % indent = 0.0\mm
  % short-indent = 0.0\mm
  
  % markup-system-spacing-padding = 0.0\mm
  % between-system-space = 0.0\mm
  % page-top-space = 0.0\mm
  
  % page-count = -1
  % system-count = -1
  
  oddHeaderMarkup = \markup {
    \fill-line {
      \unless \on-first-page {
        \fromproperty #'page:page-number-std::string
        ' '
        \fromproperty #'header:title
        ' '
        \fromproperty #'header:subtitle
      }
    }
  }

  evenHeaderMarkup = \markup {
    \fill-line {
      \unless \on-first-page {
        \fromproperty #'page:page-number-std::string
        ' '
        \fromproperty #'header:title
        ' '
        \fromproperty #'header:subtitle
      }
    }
  }

  oddFooterMarkup = \markup {
    \tiny
    \column {
      \fill-line {
        #(string-append
"Score generated from MusicXML data by xml2ly v0.9.71 (April 3, 2024) and LilyPond " (lilypond-version))
      }
      \fill-line { \column { \italic { \concat { \lilypondFileName " - modified on " \modTimeAsString } } } }
      \fill-line { \column { \italic { \concat { "PDF file created on " \pdfCreationTime } } } }
    }
  }

  % evenFooterMarkup = ""
}

\layout {
  \context { \Score %{ cLilypondLayoutContextScoreOpener %}
    autoBeaming = ##f % to display tuplets brackets
  } %{ cLilypondLayoutContextScoreCloser %}
  \context { \Voice %{ cLilypondLayoutContextVoiceOpener %}
  } %{ cLilypondLayoutContextVoiceCloser %}
}

Part_POne_Staff_One_Voice_One = \absolute {
  \language "nederlands"
  
  \clef "treble"
  \key c \major
  \numericTimeSignature \time 4/4
c'1 }

\book {

  \score {
    << %{ cLilypondParallelMusicOpener %}
      
      \new Staff %{ cLilypondNewStaff %}  = "Part_POne_Staff_One"
      \with {
        instrumentName = "Music"
      }
      << %{ cLilypondStaffOpener %}
        \context %{ cLilypondUseVoiceOpener %} Voice = "Part_POne_Staff_One_Voice_One" <<
          \Part_POne_Staff_One_Voice_One
        >> %{ cLilypondUseVoiceCloser %}
      >> %{ cLilypondStaffCloser %}
      
    >> %{ cLilypondParallelMusicCloser %}
    
    \layout {
      \context { \Score %{ cLilypondLayoutContextScoreOpener %}
        autoBeaming = ##f % to display tuplets brackets
      } %{ cLilypondLayoutContextScoreCloser %}
      \context { \Voice %{ cLilypondLayoutContextVoiceOpener %}
      } %{ cLilypondLayoutContextVoiceCloser %}
    }
    
    \midi {
      \tempo 16= 360
    }
  }
  
}
