#!//Users/jacquesmenu/musicformats-git-dev/build/bin/mfsl

###
  This MFSL script contains:
    - a tool specification, telling which MusicFormats tool
      to use, here xml2ly;

    - an input specification, the input source to apply the latter to,
      here file name "Hymn121.xml";

    - a number of MusicFormats options;

    - a SCORE choice specification containing 5 labels,
      each telling which options to use
      to get a score generated with this script and xml2ly/LilyPond;

    - a number of 'select' specifications to choose one or more such SCORE label;

    - an 'every' statement to choose all labels in choice SCORE.
###


# ----------------------------------------------------------
# the MusicFormats tool to be used
# ----------------------------------------------------------

tool : xml2ly


# ----------------------------------------------------------
# the input file to be handled by the tool
# ----------------------------------------------------------

input : "Hymn121.xml"


# ----------------------------------------------------------
# some commmon options
# ----------------------------------------------------------

# header
  -title "Hymn 121 - Angels From The Realms Of Glory"

# display
#   -display-options-values

# LilyPond
  -lilypond-generation-infos

# dynamics
  -all-wedges-below


# ----------------------------------------------------------
# the labels for the SCORE choice
# ----------------------------------------------------------

# choose names that match the intent
# using uppercase to emphasize a choice name is a matter of taste

choice SCORE :
  tutti |

  soprano | alto | tenor | bass |

  sopranoAndAlto | tenorAndBass,

  default: tutti
;


# ----------------------------------------------------------
# tell which options are to be used depending on SCORE labels
# ----------------------------------------------------------

case SCORE :
	tutti:
	  -output-file-name "Hymn121_SATB_tutti.ly"

    -global-staff-size 17.675

    -subtitle "Tutti"

    -ignore-musicxml-lyrics
      # there's a glitch in the last measure of the bass...
  ;

	soprano:
	  -output-file-name "Hymn121_SATB_soprano.ly"

    -subtitle "Soprano"
    -keep-musicxml-part-id P1

    -msr-rename-part "P1:soprano"

    -lpsr-staff-instrument-name "Voice 1:"  # an empty name
  ;

	alto:
	  -output-file-name "Hymn121_SATB_alto.ly"

    -subtitle "Alto"
    -keep-musicxml-part-id P2

    -msr-rename-part "P2:alto"

    -lpsr-staff-instrument-name "Voice 2:"  # an empty name
  ;

	tenor:
	  -output-file-name "Hymn121_SATB_tenor.ly"

    -subtitle "Tenor"
    -keep-musicxml-part-id P3

    -msr-rename-part "P3:tenor"

    -global-staff-size 23 # an easier-to-read score is needed

    -lpsr-staff-instrument-name "Voice 3:"  # an empty name
  ;

	bass:
	  -output-file-name "Hymn121_SATB_bass.ly"

    -subtitle "Bass"
    -keep-musicxml-part-id P4

    -msr-rename-part "P4:bass"

    -ignore-musicxml-lyrics
      # there's a glitch in the last measure of the bass...

    -lpsr-staff-instrument-name "Voice 4:"  # an empty name

    -indent '0\cm'
  ;

  sopranoAndAlto:
	  -output-file-name "Hymn121_SATB_sopranoAndAlto.ly"

    -subtitle 'Soprano and alto'

    -keep-musicxml-part-id P1
    -msr-rename-part "P1:soprano"
    -lpsr-staff-instrument-name "Voice 1:Soprano"

    -keep-musicxml-part-id P2
    -msr-rename-part "P2:alto"
    -lpsr-staff-instrument-name "Voice 2:Alto"
  ;

  tenorAndBass:
	  -output-file-name "Hymn121_SATB_tenorAndBass.ly"

    -subtitle 'Tenor and bass'

    -keep-musicxml-part-id P3
    -msr-rename-part "P3:tenor"
    -lpsr-staff-instrument-name "Voice 3:Tenor"

    -keep-musicxml-part-id P4
    -msr-rename-part "P4:bass"
    -lpsr-staff-instrument-name "Voice 4:Bass"

    -ignore-musicxml-lyrics
      # there's a glitch in the last measure of the bass...
  ;
;


# ----------------------------------------------------------
# choosing which score(s) to generate
# ----------------------------------------------------------

###
  Comment/uncomment the statements below to choose
  either individual SCORE labels or every one of them.
  A group of 'select' statements and an 'every' statement
  are mutually exclusive.

  The 'select' statements choose one particular label each,
  overriding the default "tutti" label setting in the 'choice' statement.

  This can also be done with the '-select, -sel' option to the MFSL interpreter,
  such as:
    -select SCORE:tenor -select SCORE:alto

  The 'every' statement causes all the existing labels for the given choice
  to be selected.

  This can also be done with this option to the MFSL interpreter:
    -every SCORE
###

# select SCORE : tutti ;
# select SCORE : soprano ;
# select SCORE : alto ;
# select SCORE : tenor ;
# select SCORE : bass ;

# select SCORE: sopranoAndAlto ;
# select SCORE: tenorAndBass ;

every SCORE ;
